[package]
name = "bestool"
version = "0.15.2"
edition = "2021"
rust-version = "1.76.0"

authors = ["FÃ©lix Saparelli <felix@passcod.name>", "BES Developers <contact@bes.au>"]
license = "GPL-3.0-or-later"
description = "BES Deployment tooling"
keywords = ["bes", "tamanu", "tupaia"]
categories = ["command-line-utilities"]
repository = "https://github.com/beyondessential/bestool"

[dependencies]
aws-config = { version = "1.3.0", optional = true }
aws-credential-types = { version = "1.1.7", features = ["hardcoded-credentials"], optional = true }
aws-sdk-route53 = { version = "1.23.0", optional = true }
aws-sdk-sts = { version = "1.22.0", optional = true }
base64ct = { version = "1.6.0", features = ["std"], optional = true }
binstalk-downloader = { version = "0.12.0", optional = true }
bitflags = { version = "2.6.0", optional = true }
bitvec = { version = "1.0.1", optional = true }
blake3 = { version = "1.5.1", optional = true }
boxcar = "0.2.5"
bytes = "1.6.0"
chrono = "0.4.38"
clap = { version = "4.5.4", features = ["derive", "cargo", "wrap_help", "env", "unicode", "string"] }
clap_complete = { version = "4.5.1", optional = true }
clap_complete_nushell = { version = "4.5.1", optional = true }
ctrlc = { version = "3.4.4", optional = true }
detect-targets = { version = "0.1.17", optional = true }
dirs = { version = "5.0.1", optional = true }
duct = { version = "0.13.7", optional = true }
embedded-graphics = { version = "0.8.1", optional = true }
enable-ansi-support = "0.2.1"
folktime = { version = "0.2.1", optional = true }
fontdue = { version = "0.9.2", optional = true }
fs4 = { version = "0.9.1", features = ["tokio"], optional = true }
glob = { version = "0.3.1", optional = true }
humantime = { version = "2.1.0", optional = true }
indicatif = { version = "0.17.7", features = ["tokio"] }
ip_network = { version = "0.4.1", optional = true }
is-root = { version = "0.1.3", optional = true }
itertools = { version = "0.13.0", optional = true }
json5 = { version = "0.4.1", optional = true }
leon = { version = "3.0.1", optional = true }
leon-macros = { version = "1.0.2", optional = true }
local-ip-address = { version = "0.6.1", optional = true }
mailgun-rs = { version = "0.1.11", optional = true }
merkle_hash = { version = "3.6.1", optional = true }
miette = { version = "7.2.0", features = ["fancy"] }
mimalloc = "0.1.41"
node-semver = { version = "2.1.0", optional = true }
regex = { version = "1.10.4", optional = true }
reqwest = { version = "0.12.5", features = ["json"], default-features = false }
rpi-st7789v2-driver = { version = "0.2.0", path = "../rpi-st7789v2-driver", features = ["miette"], optional = true }
rppal = { version = "0.18.0", optional = true }
rust-fontconfig = { version = "0.1.7", optional = true }
serde = { version = "1.0.201", features = ["derive"] }
serde_json = "1.0.117"
serde_yml = { version = "0.0.11", optional = true }
ssh-key = { version = "0.6.6", optional = true }
sysinfo = { version = "0.31.0", optional = true }
tera = { version = "1.19.1", optional = true }
thiserror = "1.0.60"
tokio = { version = "1.37.0", features = ["full"] }
tokio-postgres = { version = "0.7.10", features = ["with-chrono-0_4", "with-uuid-1"], optional = true }
tracing = { version = "0.1.40", features = ["attributes"] }
tracing-appender = "0.2.3"
tracing-subscriber = { version = "0.3.18", features = ["ansi", "env-filter", "json"] }
upgrade = { version = "2.0.0", optional = true }
uuid = "1.10.0"
walkdir = { version = "2.5.0", optional = true }
zmq = { version = "0.10.0", optional = true }

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.58.0", features = ["Win32_System_Console"] , optional = true }
windows-acl = { version = "0.3.0", optional = true }

[target.'cfg(target_env = "musl")'.dependencies]
openssl-sys = { version = "0.9.0", features = ["vendored"] }

[build-dependencies]
build-data = "0.2.1"
windows_exe_info = { version = "0.4.1", features = ["manifest"] }

[features]
default = [
	"caddy",
	"completions",
	"crypto",
	"self-update",
	"ssh",
	"tamanu",
	"walg"
]

## Common dep groups (not meant to be used directly)
aws = [
	"dep:aws-config",
	"dep:aws-credential-types",
	"dep:aws-sdk-route53",
	"dep:aws-sdk-sts",
	"dep:base64ct"
]
download = [
	"dep:binstalk-downloader",
	"dep:detect-targets"
]

## Subcommands
caddy = [
	"download",
	"dep:tera"
]
completions = [
	"dep:clap_complete",
	"dep:clap_complete_nushell"
]
crypto = [
	"dep:blake3",
	"dep:merkle_hash",
]
dyndns = [
	"aws",
	"dep:local-ip-address",
	"dep:ip_network",
	"dep:regex"
]
self-update = [
	"download",
	"dep:upgrade"
]
ssh = [
	"dep:dirs",
	"dep:duct",
	"dep:fs4",
	"dep:is-root",
	"dep:ssh-key",
	"dep:windows",
	"dep:windows-acl"
]
walg = [
	"download"
]

## Tamanu subcommands
tamanu = [ # enable all tamanu subcommands
	"tamanu-alerts",
	"tamanu-config",
	"tamanu-download",
	"tamanu-find",
	"tamanu-psql",
	"tamanu-upgrade"
]
tamanu-alerts = [
	"__tamanu",
	"tamanu-config",
	"dep:folktime",
	"dep:humantime",
	"dep:mailgun-rs",
	"dep:serde_yml",
	"dep:sysinfo",
	"dep:tera",
	"dep:tokio-postgres",
	"dep:walkdir",
]
tamanu-config = [
	"__tamanu",
]
tamanu-download = [
	"__tamanu",
	"download",
]
tamanu-find = [
	"__tamanu",
]
tamanu-psql = [
	"__tamanu",
	"tamanu-config",
	"dep:duct",
	"dep:windows",
]
tamanu-upgrade = [
	"__tamanu",
	"caddy",
	"tamanu-config",
	"dep:regex",
]
__tamanu = [ # internal feature to enable the tamanu subcommand common code
	# deps for tamanu::roots
	"dep:dirs",
	"dep:glob",
	"dep:itertools",
	"dep:json5",
	"dep:leon-macros",
	"dep:leon",
	"dep:node-semver",
]

## Iti subcommands
iti = [ # enable all iti subcommands
	"iti-battery",
	"iti-eink",
	"iti-lcd",
	"iti-temperature"
]
iti-battery = [
	"__iti",
	"dep:folktime",
	"dep:humantime",
	"dep:rppal"
]
iti-eink = [
	"__iti",
	"dep:bitflags",
	"dep:bitvec",
	"dep:fontdue",
	"dep:rppal",
	"dep:rust-fontconfig"
]
iti-lcd = [
	"__iti",
	"dep:ctrlc",
	"dep:embedded-graphics",
	"dep:rpi-st7789v2-driver",
	"dep:sysinfo"
]
iti-temperature = [
	"__iti",
	"dep:duct",
	"dep:humantime"
]
__iti = ["dep:zmq"] # internal feature to enable the iti subcommand common code

[package.metadata.binstall]
pkg-url = "https://tools.ops.tamanu.io/bestool/{ version }/{ target }/{ name }{ binary-ext }"
pkg-fmt = "bin"
