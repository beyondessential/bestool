[package]
name = "bestool"
version = "0.30.3"
edition = "2024"

authors = ["FÃ©lix Saparelli <felix@passcod.name>", "BES Developers <contact@bes.au>"]
license = "GPL-3.0-or-later"
description = "BES Deployment tooling"
keywords = ["bes", "tamanu", "tupaia"]
categories = ["command-line-utilities"]
repository = "https://github.com/beyondessential/bestool"

[dependencies]
algae-cli = { version = "1.0.8", path = "../algae-cli", optional = true }
bestool-psql = { version = "0.1.0", path = "../psql", optional = true }
binstalk-downloader = { version = "0.13.22", optional = true, features = ["hickory-dns"] }
blake3 = { version = "1.8.2", optional = true }
boxcar = "0.2.14"
bytes = "1.10.0"
chrono = "0.4.41"
clap = { workspace = true, features = ["env", "unicode", "string"] }
clap_complete = { version = "4.5.57", optional = true }
clap_complete_nushell = { version = "4.5.8", optional = true }
ctrlc = { version = "3.5.0", optional = true }
comfy-table = { version = "7.2.0", optional = true }
detect-targets = { version = "0.1.61", optional = true }
dirs = { version = "6.0.0", optional = true }
duct = { version = "1.1.0", optional = true }
dunce = { version = "1.0.5", optional = true }
embedded-graphics = { version = "0.8.1", optional = true }
folktime = { version = "0.2.1", optional = true }
fs4 = { version = "0.13.1", features = ["tokio"], optional = true }
futures = { workspace = true }
glob = { version = "0.3.3", optional = true }
hickory-resolver = { version = "0.25.2", optional = true }
humantime = { version = "2.2.0", optional = true }
indicatif = { workspace = true, optional = true }
is-root = { version = "0.1.3", optional = true }
itertools = { workspace = true, optional = true }
json5 = { version = "0.4.1", optional = true }
leon = { version = "3.0.1", optional = true }
leon-macros = { version = "1.0.2", optional = true }
lloggs = "1.1.0"
mailgun-rs = { version = "2.0.1", optional = true }
merkle_hash = { version = "3.8.0", optional = true }
miette = { workspace = true, features = ["fancy"] }
mimalloc = "0.1.48"
node-semver = { version = "2.2.0", optional = true }
percent-encoding = { version = "2.3.1", optional = true }
pulldown-cmark = { version = "0.13.0", optional = true }
regex = { version = "1.11.2", optional = true }
reqwest = { version = "0.12.23", features = ["default-tls", "json"], default-features = false }
rpi-st7789v2-driver = { version = "0.3.7", path = "../rpi-st7789v2-driver", features = ["miette"], optional = true }
rppal = { version = "0.22.1", optional = true }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.143"
serde_yml = { version = "0.0.12", optional = true }
ssh-key = { version = "0.6.6", optional = true }
sysinfo = { version = "0.37.0", optional = true }
target-tuples = { version = "0.5.13", optional = true }
tempfile = "3.21.0"
tera = { version = "1.19.1", optional = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tokio-postgres = { version = "0.7.13", features = ["with-chrono-0_4", "with-uuid-1"], optional = true }
tokio-util = { workspace = true, optional = true }
tracing = { workspace = true }
upgrade = { version = "2.0.1", optional = true }
uuid = "1.18.1"
walkdir = { version = "2.5.0", optional = true }
zip = { version = "5.0.0", optional = true, default-features = false, features = ["time"] }
zmq = { version = "0.10.0", optional = true }

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.62.0", features = ["Win32_System_Console"], optional = true }
windows-acl = { version = "0.3.0", optional = true }
windows-env = { version = "0.2.0", optional = true }

[target.'cfg(target_env = "musl")'.dependencies]
openssl-sys = { version = "0.9.109", features = ["vendored"] }

[build-dependencies]
windows_exe_info = { version = "0.5.2", features = ["manifest"] }

[features]
default = ["caddy", "completions", "crypto", "psql-audit", "self-update", "ssh", "tamanu"]

## Common dep groups (not meant to be used directly)
download = ["dep:binstalk-downloader", "dep:detect-targets", "dep:hickory-resolver"]

## Subcommands
caddy = ["download", "dep:tera"]
completions = ["dep:clap_complete", "dep:clap_complete_nushell"]
crypto = ["dep:algae-cli", "dep:blake3", "dep:merkle_hash"]
file = ["dep:blake3", "dep:indicatif", "dep:tokio-util"]
psql-audit = ["dep:bestool-psql"]
self-update = ["download", "dep:upgrade", "dep:windows-env"]
ssh = ["dep:dirs", "dep:duct", "dep:fs4", "dep:is-root", "dep:ssh-key", "dep:windows", "dep:windows-acl"]

## Tamanu subcommands
tamanu = [ # enable all tamanu subcommands
	"tamanu-alerts",
	"tamanu-artifacts",
	"tamanu-backup",
	"tamanu-backup-configs",
	"tamanu-config",
	"tamanu-url",
	"tamanu-download",
	"tamanu-find",
	"tamanu-greenmask",
	"tamanu-psql",
]
tamanu-alerts = [
	"__tamanu",
	"tamanu-config",
	"dep:folktime",
	"dep:humantime",
	"dep:mailgun-rs",
	"dep:pulldown-cmark",
	"dep:serde_yml",
	"dep:sysinfo",
	"dep:tera",
	"dep:tokio-postgres",
	"dep:walkdir",
]
tamanu-artifacts = ["__tamanu", "dep:comfy-table", "dep:detect-targets", "dep:target-tuples"]
tamanu-backup = ["__tamanu", "file", "tamanu-config", "tamanu-pg-common", "dep:algae-cli", "dep:duct"]
tamanu-backup-configs = ["__tamanu", "tamanu-backup", "dep:walkdir", "dep:zip"]
tamanu-config = ["__tamanu"]
tamanu-url = ["__tamanu", "tamanu-config", "dep:percent-encoding"]
tamanu-download = ["__tamanu", "download"]
tamanu-find = ["__tamanu"]
tamanu-greenmask = ["__tamanu", "tamanu-config", "tamanu-pg-common", "dep:dunce", "dep:serde_yml", "dep:walkdir"]
tamanu-psql = ["__tamanu", "tamanu-config", "dep:bestool-psql"]
__tamanu = [ # internal feature to enable the tamanu subcommand common code
	"dep:dirs",
	"dep:glob",
	"dep:itertools",
	"dep:json5",
	"dep:leon-macros",
	"dep:leon",
	"dep:node-semver",
	"dep:regex",
]
tamanu-pg-common = []

## Iti subcommands
iti = [ # enable all iti subcommands
	"iti-battery",
	"iti-lcd",
	"iti-temperature",
]
iti-battery = ["__iti", "dep:folktime", "dep:humantime", "dep:rppal"]
iti-lcd = ["__iti", "dep:ctrlc", "dep:embedded-graphics", "dep:rpi-st7789v2-driver", "dep:sysinfo"]
iti-temperature = ["__iti", "dep:duct", "dep:humantime"]
__iti = ["dep:zmq"] # internal feature to enable the iti subcommand common code

## Legacy noop features to avoid breaking builds
tamanu-upgrade = []
walg = []

[dev-dependencies]
trycmd = "0.15.10"

[package.metadata.binstall]
pkg-url = "https://tools.ops.tamanu.io/bestool/{ version }/{ target }/{ name }{ binary-ext }"
pkg-fmt = "bin"
