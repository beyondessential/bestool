[package]
name = "bestool"
version = "0.28.3"
edition = "2021"
rust-version = "1.76.0"

authors = [
	"FÃ©lix Saparelli <felix@passcod.name>",
	"BES Developers <contact@bes.au>",
]
license = "GPL-3.0-or-later"
description = "BES Deployment tooling"
keywords = ["bes", "tamanu", "tupaia"]
categories = ["command-line-utilities"]
repository = "https://github.com/beyondessential/bestool"

[dependencies]
algae-cli = { version = "1.0.8", path = "../algae-cli", optional = true }
binstalk-downloader = { version = "0.13.18", optional = true, features = [
	"hickory-dns",
] }
blake3 = { version = "1.8.2", optional = true }
boxcar = "0.2.12"
bytes = "1.10.0"
chrono = "0.4.41"
clap = { workspace = true, features = [
	"env",
	"unicode",
	"string",
] }
clap_complete = { version = "4.5.50", optional = true }
clap_complete_nushell = { version = "4.5.1", optional = true }
ctrlc = { version = "3.4.7", optional = true }
detect-targets = { version = "0.1.49", optional = true }
dirs = { version = "6.0.0", optional = true }
duct = { version = "1.0.0", optional = true }
dunce = { version = "1.0.5", optional = true }
embedded-graphics = { version = "0.8.1", optional = true }
folktime = { version = "0.2.1", optional = true }
fs4 = { version = "0.13.1", features = ["tokio"], optional = true }
futures = { workspace = true }
glob = { version = "0.3.2", optional = true }
hickory-resolver = { version = "0.25.0-alpha.3", optional = true }
humantime = { version = "2.2.0", optional = true }
indicatif = { workspace = true, optional = true }
is-root = { version = "0.1.3", optional = true }
itertools = { workspace = true, optional = true }
json5 = { version = "0.4.1", optional = true }
leon = { version = "3.0.1", optional = true }
leon-macros = { version = "1.0.2", optional = true }
lloggs = "1.1.0"
mailgun-rs = { version = "1.0.0", optional = true }
merkle_hash = { version = "3.8.0", optional = true }
miette = { workspace = true, features = ["fancy"] }
mimalloc = "0.1.46"
node-semver = { version = "2.2.0", optional = true }
pulldown-cmark = { version = "0.13.0", optional = true }
regex = { version = "1.10.6", optional = true }
reqwest = { version = "0.12.15", features = [
	"default-tls",
	"json",
], default-features = false }
rpi-st7789v2-driver = { version = "0.3.7", path = "../rpi-st7789v2-driver", features = [
	"miette",
], optional = true }
rppal = { version = "0.22.1", optional = true }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.139"
serde_yml = { version = "0.0.12", optional = true }
ssh-key = { version = "0.6.6", optional = true }
sysinfo = { version = "0.35.1", optional = true }
tempfile = "3.20.0"
tera = { version = "1.19.1", optional = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tokio-postgres = { version = "0.7.13", features = [
	"with-chrono-0_4",
	"with-uuid-1",
], optional = true }
tokio-util = { workspace = true, optional = true }
tracing = { workspace = true }
upgrade = { version = "2.0.1", optional = true }
uuid = "1.17.0"
walkdir = { version = "2.5.0", optional = true }
zip = { version = "4.0.0", optional = true, default-features = false, features = [
	"time",
] }
zmq = { version = "0.10.0", optional = true }

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.61.1", features = [
	"Win32_System_Console",
], optional = true }
windows-acl = { version = "0.3.0", optional = true }
windows-env = { version = "0.2.0", optional = true }

[target.'cfg(target_env = "musl")'.dependencies]
openssl-sys = { version = "0.9.108", features = ["vendored"] }

[build-dependencies]
windows_exe_info = { version = "0.5.2", features = ["manifest"] }

[features]
default = [
	"caddy",
	"completions",
	"crypto",
	"self-update",
	"ssh",
	"tamanu",
]

## Common dep groups (not meant to be used directly)
download = [
	"dep:binstalk-downloader",
	"dep:detect-targets",
	"dep:hickory-resolver",
]

## Subcommands
caddy = ["download", "dep:tera"]
completions = ["dep:clap_complete", "dep:clap_complete_nushell"]
crypto = ["dep:algae-cli", "dep:blake3", "dep:merkle_hash"]
file = [
	"dep:blake3",
	"dep:indicatif",
	"dep:tokio-util",
]
self-update = ["download", "dep:upgrade", "dep:windows-env"]
ssh = [
	"dep:dirs",
	"dep:duct",
	"dep:fs4",
	"dep:is-root",
	"dep:ssh-key",
	"dep:windows",
	"dep:windows-acl",
]

## Tamanu subcommands
tamanu = [ # enable all tamanu subcommands
	"tamanu-alerts",
	"tamanu-backup",
	"tamanu-backup-configs",
	"tamanu-config",
	"tamanu-download",
	"tamanu-find",
	"tamanu-greenmask",
	"tamanu-psql",
	"tamanu-upgrade",
]
tamanu-alerts = [
	"__tamanu",
	"tamanu-config",
	"dep:folktime",
	"dep:humantime",
	"dep:mailgun-rs",
	"dep:pulldown-cmark",
	"dep:serde_yml",
	"dep:sysinfo",
	"dep:tera",
	"dep:tokio-postgres",
	"dep:walkdir",
]
tamanu-backup = [
	"__tamanu",
	"file",
	"tamanu-config",
	"tamanu-pg-common",
	"dep:algae-cli",
	"dep:duct",
]
tamanu-backup-configs = [
	"__tamanu",
	"tamanu-backup",
	"dep:walkdir",
	"dep:zip",
]
tamanu-config = ["__tamanu"]
tamanu-download = ["__tamanu", "download"]
tamanu-find = ["__tamanu"]
tamanu-greenmask = [
	"__tamanu",
	"tamanu-config",
	"tamanu-pg-common",
	"dep:dunce",
	"dep:serde_yml",
	"dep:walkdir",
]
tamanu-psql = [
	"__tamanu",
	"tamanu-config",
	"tamanu-pg-common",
	"dep:duct",
	"dep:windows",
]
tamanu-upgrade = ["__tamanu", "caddy", "tamanu-config", "dep:regex"]
__tamanu = [ # internal feature to enable the tamanu subcommand common code
	# deps for tamanu::roots
	"dep:dirs",
	"dep:glob",
	"dep:itertools",
	"dep:json5",
	"dep:leon-macros",
	"dep:leon",
	"dep:node-semver",
]
tamanu-pg-common = []

## Iti subcommands
iti = [ # enable all iti subcommands
	"iti-battery",
	"iti-lcd",
	"iti-temperature",
]
iti-battery = ["__iti", "dep:folktime", "dep:humantime", "dep:rppal"]
iti-lcd = [
	"__iti",
	"dep:ctrlc",
	"dep:embedded-graphics",
	"dep:rpi-st7789v2-driver",
	"dep:sysinfo",
]
iti-temperature = ["__iti", "dep:duct", "dep:humantime"]
__iti = ["dep:zmq"] # internal feature to enable the iti subcommand common code

## Legacy noop feature to avoid breaking builds
walg = []

[dev-dependencies]
trycmd = "0.15.9"

[package.metadata.binstall]
pkg-url = "https://tools.ops.tamanu.io/bestool/{ version }/{ target }/{ name }{ binary-ext }"
pkg-fmt = "bin"
